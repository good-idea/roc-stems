{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@artcommacode/q/index.js","src/js/components/Button.js","src/js/components/Stem.js","src/js/components/Track.js","src/js/components/publisher.js","src/js/stems.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","/Users/Joseph/Sites/small/stems/node_modules/@artcommacode/q/index.js","module","_toConsumableArray","arr","Array","isArray","arr2","from","Object","defineProperty","value","toArray","list","concat","first","xs","elemError","String","getRoot","document","body","contains","query","q","root","querySelectorAll","queryOne","makeButton","el","buttonIndex","publisher","button","element","enable","enabled","classList","add","disable","remove","toggleEnabled","activate","active","deactivate","toggleActive","inputState","subscribe","count","addEventListener","event","emit","makeStem","src","stem","audio","Audio","load","loadedCallback","fileName","replace","split","pop","xhr","XMLHttpRequest","open","encodeURI","setRequestHeader","responseType","onload","blob","Blob","response","type","objectUrl","URL","createObjectURL","revokeObjectURL","ready","error","target","status","statusText","send","play","unmute","reset","stop","volume","pause","currentTime","mute","default","makeTrack","trackIndex","stemLoadedHandler","err","loadedStems","track","hasError","stems","isLoaded","autoplay","handleClick","pad","input","padLength","arguments","char","direction","string","toString","diff","formatDecimal","lLength","rLength","push","substr","stemSources","JSON","parse","getAttribute","autoload","hasAttribute","map","stemElement","_Stem2","newIndex","stemIndex","filter","debugOutput","_q","innerHTML","setInterval","debugString","min","max","index","activated","Math","round","formattedTime","buffered","end","duration","join","stemsCount","_Stem","__esModule","PubSubEmitter","_classCallCheck","this","listeners","Map","topic","callback","has","set","get","reduce","listener","currentIndex","splice","key","_len","args","_key","forEach","apply","_publisher","_Track","_Button","c","trackElements","everything","buttons","tracks","newTrack","_Track2","_publisher2","newButton","_Button2","./components/Button","./components/Track","./components/publisher","@artcommacode/q"],"mappings":"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","file":"stems.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar toArray = function toArray(list) {\n  return [].concat(_toConsumableArray(list));\n};\n\nvar first = function first(xs) {\n  return xs[0];\n};\n\nvar elemError = function elemError(e) {\n  throw new Error(\"\\\"\" + String(e) + \"\\\" does't exist in the document\");\n};\n\nvar getRoot = function getRoot(e) {\n  return !e ? document : document && document.body && document.body.contains(e) ? e : elemError(e);\n};\n\nvar query = exports.query = function query(q, e) {\n  var root = getRoot(e);\n  return root ? toArray(root.querySelectorAll(q)) : [];\n};\n\nvar queryOne = exports.queryOne = function queryOne(q, e) {\n  return first(query(q, e));\n};\n","\n/**\n * Receives a DOM element.\n * Returns an object with enable, activate, and deactivate methods\n * @param  {DOM element} element\n * @return {Shape}\n */\n\nfunction makeButton(el, buttonIndex, publisher) {\n\tconst button = {};\n\tbutton.element = el;\n\n\tbutton.enable = function enable() {\n\t\tbutton.enabled = true;\n\t\tbutton.element.classList.add('enabled');\n\t};\n\n\tbutton.disable = function disable() {\n\t\tbutton.enabled = false;\n\t\tbutton.element.classList.remove('enabled');\n\t};\n\n\tbutton.toggleEnabled = function toggleEnabled() {\n\t\tif (button.enabled) {\n\t\t\tbutton.disable();\n\t\t} else {\n\t\t\tbutton.enable();\n\t\t}\n\t};\n\n\tbutton.activate = function activate() {\n\t\tif (!button.enabled) button.enable();\n\t\tbutton.active = true;\n\t\tbutton.element.classList.add('active');\n\t};\n\n\tbutton.deactivate = function deactivate() {\n\t\tbutton.active = false;\n\t\tbutton.element.classList.remove('active');\n\t};\n\n\tbutton.toggleActive = function toggleActive(inputState) {\n\t\tbutton.active = inputState || !button.active;\n\t\tif (button.active === true) {\n\t\t\tbutton.activate();\n\t\t} else {\n\t\t\tbutton.deactivate();\n\t\t}\n\t};\n\n\t/**\n\t * EVENTS\n\t */\n\n\tpublisher.subscribe('enableButtons', (count) => {\n\t\tif (buttonIndex <= count - 1) {\n\t\t\tbutton.enable();\n\t\t\tbutton.activate();\n\t\t} else {\n\t\t\tbutton.disable();\n\t\t\tbutton.deactivate();\n\t\t}\n\t});\n\n\tpublisher.subscribe('disableButtons', () => {\n\t\tbutton.deactivate();\n\t})\n\n\tbutton.element.addEventListener('click', () => {\n\t\tbutton.toggleActive();\n\t\tconst event = (button.active) ? 'stemActivated' : 'stemDeactivated';\n\t\tpublisher.emit(event, buttonIndex);\n\t});\n\n\treturn button;\n}\n\nexport default makeButton;\n","import { query, queryOne } from '@artcommacode/q';\n\n/**\n * Receives a DOM element with links to audio files to be played in tandem as stems.\n * Returns an object with play/pause/mute methods\n * @param  {DOM element} element\n * @return {Stem}\n */\nfunction makeStem(src) {\n\tconst stem = {};\n\tstem.audio = new Audio();\n\n\tstem.load = function loadStem(loadedCallback) {\n\t\tstem.fileName = src.replace(/\\/$/).split('/').pop();\n\t\tconst xhr = new XMLHttpRequest();\n\t\txhr.open('GET', encodeURI(src), true);\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.responseType = 'blob';\n\t\txhr.onload = (e) => {\n\t\t\tconst blob = new Blob([xhr.response], { type: 'audio/mp3' });\n\t\t\tconst objectUrl = URL.createObjectURL(blob);\n\t\t\tstem.audio.src = objectUrl;\n\t\t\tstem.audio.onload = () => {\n\t\t\t\tURL.revokeObjectURL(objectUrl);\n\t\t\t};\n\t\t\tstem.ready = true;\n\t\t\tconst error = (e.target.status !== 200) ? `${e.target.status} ${e.target.statusText}` : false;\n\t\t\tloadedCallback(error);\n\t\t};\n\t\txhr.send();\n\t};\n\n\t// const stem = {};\n\t// stem.audio = element;\n\t// stem.active = false;\n\t// const url = stem.audio.getAttribute('src').split('/');\n\t// stem.fileName = url.slice(-1)[0];\n\n\tstem.play = function playStem() {\n\t\tif (stem.ready) {\n\t\t\tstem.unmute();\n\t\t\tstem.audio.play();\n\t\t}\n\t\tstem.active = true;\n\t\ttry {\n\t\t\tstem.audio.play();\n\t\t} catch (e) {\n\t\t\t// do nothing\n\t\t}\n\t};\n\n\tstem.reset = function resetStem() {\n\t\tstem.stop();\n\t\tstem.audio.volume = 1;\n\t};\n\n\tstem.stop = function stopStem() {\n\t\tstem.active = false;\n\t\tstem.audio.pause();\n\t\tstem.audio.currentTime = 0;\n\t};\n\n\tstem.unmute = function unmuteStem() {\n\t\tstem.active = true;\n\t\tstem.audio.volume = 1;\n\t};\n\n\tstem.mute = function muteStem() {\n\t\tstem.active = false;\n\t\tstem.audio.volume = 0;\n\t};\n\n\treturn stem;\n}\n\n\nexport default makeStem;\n","import { query, queryOne } from '@artcommacode/q';\nimport makeStem from './Stem';\n\n/**\n * Receives a DOM element with links to audio files to be played in tandem as stems.\n * Returns an object with play/pause/mute methods\n * @param  {DOM element} element\n * @return {Stem}\n */\nfunction makeTrack(el, trackIndex, publisher) {\n\tconst track = {};\n\ttrack.element = el;\n\tconst stemSources = JSON.parse(track.element.getAttribute('data-stems'));\n\n\tconst autoload = track.element.hasAttribute('autoload') && track.element.getAttribute('autoload') !== 'false';\n\tconst autoplay = track.element.hasAttribute('autoplay') && track.element.getAttribute('autoplay') !== 'false';\n\n\tconst stems = [];\n\tlet loadedStems = 0;\n\n\t// add each element to the tracks array.\n\tstemSources.map((stemElement) => {\n\t\tconst stem = makeStem(stemElement);\n\t\tstems.push(stem);\n\t});\n\n\t/**\n\t * FUNCTIONS\n\t */\n\n\t/**\n\t * Track the number of loaded stems.\n\t * Set error status if necessary.\n\t */\n\tfunction stemLoadedHandler(err) {\n\t\tloadedStems += 1;\n\t\tif (err) {\n\t\t\ttrack.hasError = true;\n\t\t\ttrack.element.classList.add('has-errors');\n\t\t}\n\t\tif (loadedStems === stems.length) {\n\t\t\ttrack.isLoaded = true;\n\t\t\ttrack.element.classList.remove('loading');\n\t\t\ttrack.element.classList.add('loaded');\n\t\t\tif (autoplay) track.play();\n\t\t}\n\t}\n\n\t/**\n\t * If the track hasn't loaded, load the stems. Otherwise, play.\n\t */\n\tfunction handleClick() {\n\t\tif (!track.isLoaded) {\n\t\t\ttrack.load();\n\t\t} else {\n\t\t\ttrack.play();\n\t\t}\n\t}\n\n\t/**\n\t * METHODS\n\t */\n\n\ttrack.load = function loadTrack() {\n\t\ttrack.element.classList.add('loading');\n\t\tstems.map(stem => stem.load(stemLoadedHandler));\n\t};\n\n\ttrack.play = function playTrack() {\n\t\tpublisher.emit('trackPlayed', trackIndex);\n\t\ttrack.active = true;\n\t\tstems.map(stem => stem.play());\n\t\tpublisher.emit('enableButtons', stems.length);\n\t\ttrack.element.classList.add('playing');\n\t};\n\n\ttrack.stop = function stopTrack() {\n\t\ttrack.active = false;\n\t\tstems.map(stem => stem.reset());\n\t\tpublisher.emit('enableButtons', stems.length);\n\t\ttrack.element.classList.remove('playing');\n\t};\n\n\t/*\n   * EVENTS\n\t */\n\ttrack.element.addEventListener('click', handleClick);\n\n\tpublisher.subscribe('trackPlayed', (newIndex) => {\n\t\tif (newIndex !== trackIndex) {\n\t\t\ttrack.active = false;\n\t\t\ttrack.stop();\n\t\t}\n\t});\n\n\tpublisher.subscribe('stemActivated', (stemIndex) => {\n\t\tif (track.active) stems[stemIndex].unmute();\n\t});\n\n\tpublisher.subscribe('stemDeactivated', (stemIndex) => {\n\t\tif (track.active) stems[stemIndex].mute();\n\t});\n\n\tpublisher.subscribe('allStemsToggled', () => {\n\t\tif (track.active) {\n\t\t\tconst allEnabled = (stems.filter(stem => stem.active).length === stems.length);\n\t\t\tif (allEnabled) {\n\t\t\t\tstems.map(stem => stem.mute());\n\t\t\t\tpublisher.emit('disableButtons', stems.length);\n\t\t\t} else {\n\t\t\t\tstems.map(stem => stem.unmute());\n\t\t\t\tpublisher.emit('enableButtons', stems.length);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (autoload) track.load();\n\n\t/**\n\t * Debug logging\n\t */\n\n\tconst debugOutput = queryOne('#debug-output');\n\n\tpublisher.subscribe('trackPlayed', () => {\n\t\tdebugOutput.innerHTML = '';\n\t});\n\n\tfunction pad(input, padLength = 2, char = '0', direction = 'right') {\n\t\tlet string = input.toString();\n\t\tconst diff = padLength - input.length;\n\t\tfor (let i = 0; i < diff; i += 1) {\n\t\t\tif (direction === 'right') {\n\t\t\t\tstring += char;\n\t\t\t} else {\n\t\t\t\tstring = char + string;\n\t\t\t}\n\t\t}\n\t\treturn string;\n\t}\n\n\tfunction formatDecimal(input, lLength, rLength) {\n\t\tconst arr = input.toString().split('.');\n\t\tif (arr.length === 1) arr.push('0');\n\t\tconst whole = pad(arr[0], lLength, '0', 'left');\n\t\tconst dec = pad(arr[1], rLength, '0', 'right').substr(0, rLength);\n\t\treturn `${whole}.${dec}`;\n\t}\n\n\tsetInterval(() => {\n\t\tif (track.active) {\n\t\t\tconst debugString = ['*******'];\n\t\t\tlet min;\n\t\t\tlet max;\n\t\t\tstems.map((stem, index) => {\n\t\t\t\tif (stem.audio) {\n\t\t\t\t\tconst activated = (stem.active) ? 'activated' : 'deactivated';\n\t\t\t\t\tconst currentTime = Math.round(stem.audio.currentTime * 10000) / 10000;\n\t\t\t\t\tconst formattedTime = formatDecimal(currentTime, 3, 4);\n\n\t\t\t\t\tmin = (min) ? Math.min(min, currentTime) : currentTime;\n\t\t\t\t\tmax = (max) ? Math.max(max, currentTime) : currentTime;\n\t\t\t\t\tif (currentTime === 0) stem.audio.play();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdebugString.push(`   stem ${index}: ${formattedTime} | ${stem.fileName} - ${activated} | ${stem.audio.buffered.end(0)} / ${stem.audio.duration}`);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst diff = formatDecimal(max - min, 1, 6);\n\t\t\tdebugString.push(`   max diff: ${diff}`);\n\t\t\tdebugOutput.innerHTML = debugString.join('<br>');\n\t\t}\n\t}, 100);\n\n\ttrack.stemsCount = stems.length;\n\n\n\treturn track;\n}\n\n\nexport default makeTrack;\n","\nclass PubSubEmitter {\n\tconstructor() {\n\t\t// create a new Map to hold all of the topics\n\t\tthis.listeners = new Map();\n\t}\n\n\tsubscribe(topic, callback) {\n\t\t// if the listener does not hae the topic yet, add it.\n\t\tif (!this.listeners.has(topic)) this.listeners.set(topic, []);\n\t\t// push the callback to the topic's array\n\t\tthis.listeners.get(topic).push(callback);\n\t}\n\n\tunsubscribe(topic, callback) {\n\t\tconst listeners = this.listeners.get(topic);\n\t\tlet index;\n\n\t\tif (listeners && listeners.length) {\n\t\t\t// find the index of the callback we're removing\n\t\t\tindex = listeners.reduce((i, listener, currentIndex) => {\n\t\t\t\t(typeof(listener) === 'function' && listener === callback) ?\n\t\t\t\t\ti = currentIndex :\n\t\t\t\t\ti;\n\t\t\t}, -1);\n\n\t\t\tif (index > -1) {\n\t\t\t\t// if we found a match, splice it out, and resupply the map with the spliced array\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t\tthis.listeners.set(topic, listeners);\n\t\t\t\treturn true; // return true if we removed something\n\t\t\t}\n\t\t}\n\t\treturn false; // return false if we didn't\n\t}\n\n\temit(topic, ...args) {\n\t\t// get the listeners subscribed to the topic\n\t\tconst listeners = this.listeners.get(topic);\n\n\t\tif (listeners && listeners.length) {\n\t\t\t// execute each callback with any supplied arguments\n\t\t\tlisteners.forEach((listener) => {\n\t\t\t\tlistener(...args);\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nconst publisher = new PubSubEmitter();\n\nexport default publisher;\n","// A small utility for getting DOM elements\nimport { query, queryOne } from '@artcommacode/q';\n\n// A component you can use to emit and subscribe to events.\n// Helpful to decouple UI stuff\nimport publisher from './components/publisher';\nimport makeTrack from './components/Track';\nimport makeButton from './components/Button';\n\n// first, just find the elements\nconst trackElements = query('.stem-track');\nconst everything = queryOne('.stem-button--play-all') || false;\nconst buttons = [];\nconst tracks = [];\n\n// add each composed track to an array\ntrackElements.map((track, index) => {\n\tconst newTrack = makeTrack(track, index, publisher);\n\ttracks.push(newTrack);\n});\n\nquery('.stem-buttons .stem-button').map((button, index) => {\n\tconst newButton = makeButton(button, index, publisher);\n\tbuttons.push(newButton);\n});\n\n/**\n * Event Listeners\n */\n\nif (everything) {\n\teverything.addEventListener('click', () => {\n\t\tpublisher.emit('allStemsToggled');\n\t});\n}\n\n// Use each track element as the source of a Stem object\n"]}