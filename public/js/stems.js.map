{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@artcommacode/q/index.js","src/js/components/Button.js","src/js/components/Stem.js","src/js/components/Track.js","src/js/components/publisher.js","src/js/stems.js"],"names":[],"mappings":"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","file":"stems.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar toArray = function toArray(list) {\n  return [].concat(_toConsumableArray(list));\n};\n\nvar first = function first(xs) {\n  return xs[0];\n};\n\nvar elemError = function elemError(e) {\n  throw new Error(\"\\\"\" + String(e) + \"\\\" does't exist in the document\");\n};\n\nvar getRoot = function getRoot(e) {\n  return !e ? document : document && document.body && document.body.contains(e) ? e : elemError(e);\n};\n\nvar query = exports.query = function query(q, e) {\n  var root = getRoot(e);\n  return root ? toArray(root.querySelectorAll(q)) : [];\n};\n\nvar queryOne = exports.queryOne = function queryOne(q, e) {\n  return first(query(q, e));\n};\n","\n/**\n * Receives a DOM element.\n * Returns an object with enable, activate, and deactivate methods\n * @param  {DOM element} element\n * @return {Shape}\n */\n\nfunction makeButton(el, buttonIndex, publisher) {\n\tconst button = {};\n\tbutton.element = el;\n\n\tbutton.enable = function enable() {\n\t\tbutton.enabled = true;\n\t\tbutton.element.classList.add('enabled');\n\t};\n\n\tbutton.disable = function disable() {\n\t\tbutton.enabled = false;\n\t\tbutton.element.classList.remove('enabled');\n\t};\n\n\tbutton.toggleEnabled = function toggleEnabled() {\n\t\tif (button.enabled) {\n\t\t\tbutton.disable();\n\t\t} else {\n\t\t\tbutton.enable();\n\t\t}\n\t};\n\n\tbutton.activate = function activate() {\n\t\tif (!button.enabled) button.enable();\n\t\tbutton.active = true;\n\t\tbutton.element.classList.add('active');\n\t};\n\n\tbutton.deactivate = function deactivate() {\n\t\tbutton.active = false;\n\t\tbutton.element.classList.remove('active');\n\t};\n\n\tbutton.toggleActive = function toggleActive(inputState) {\n\t\tbutton.active = inputState || !button.active;\n\t\tif (button.active === true) {\n\t\t\tbutton.activate();\n\t\t} else {\n\t\t\tbutton.deactivate();\n\t\t}\n\t};\n\n\tbutton.element.addEventListener('click', () => {\n\t\tbutton.toggleActive();\n\t\tconst event = (button.active) ? 'stemActivated' : 'stemDeactivated';\n\t\tpublisher.emit(event, buttonIndex);\n\t});\n\n\tpublisher.subscribe('allButtonsDisabled', button.disable);\n\n\tpublisher.subscribe('trackPlayed', (trackIndex, stemCount) => {\n\t\tif (buttonIndex <= stemCount - 1) {\n\t\t\tbutton.enable();\n\t\t\tbutton.activate();\n\t\t} else {\n\t\t\tbutton.disable();\n\t\t\tbutton.deactivate();\n\t\t}\n\t})\n\n\tpublisher.subscribe('stemPlayed', (activeIndex) => {\n\t\tif (activeIndex === buttonIndex) button.activate();\n\t});\n\n\treturn button;\n}\n\nexport default makeButton;\n","import { query, queryOne } from '@artcommacode/q';\n\n/**\n * Receives a DOM element with links to audio files to be played in tandem as stems.\n * Returns an object with play/pause/mute methods\n * @param  {DOM element} element\n * @return {Stem}\n */\nfunction makeStem(element) {\n\tconst stem = {};\n\tstem.audio = element;\n\tstem.active = false;\n\tconst url = stem.audio.getAttribute('src').split('/');\n\tstem.fileName = url.slice(-1)[0];\n\n\tstem.play = function playStem() {\n\t\tstem.active = true;\n\t\ttry {\n\t\t\tstem.audio.play();\n\t\t} catch (e) {\n\t\t\t// do nothing\n\t\t}\n\t};\n\n\tstem.stop = function stopStem() {\n\t\tstem.active = false;\n\t\tstem.audio.pause();\n\t\tstem.audio.currentTime = 0;\n\t};\n\n\tstem.unmute = function unmuteStem() {\n\t\tstem.active = true;\n\t\tstem.audio.volume = 1;\n\t};\n\n\tstem.mute = function muteStem() {\n\t\tstem.active = false;\n\t\tstem.audio.volume = 0;\n\t};\n\n\treturn stem;\n}\n\n\nexport default makeStem;\n","import { query, queryOne } from '@artcommacode/q';\nimport makeStem from './Stem';\n\n/**\n * Receives a DOM element with links to audio files to be played in tandem as stems.\n * Returns an object with play/pause/mute methods\n * @param  {DOM element} element\n * @return {Stem}\n */\nfunction makeTrack(el, trackIndex, publisher, readyCallback) {\n\tconst track = {};\n\ttrack.element = el;\n\tconst stemElements = query('audio', el);\n\n\tconst stems = [];\n\n\t// See if all of the tracks are ready\n\n\tfunction checkIfReady() {\n\t\tconst readyCount = stems.filter(stem => stem.isReady).length;\n\n\t\tif (readyCount === stems.length) {\n\t\t\ttrack.ready = true;\n\t\t\t// reports back to the main script, so it can count all of the loaded tracks\n\t\t\treadyCallback(trackIndex);\n\t\t\tif (!track.hasErrors) {\n\t\t\t\ttrack.element.classList.add('ready');\n\t\t\t} else {\n\t\t\t\ttrack.element.classList.add('has-errors');\n\t\t\t}\n\t\t}\n\t}\n\n\t// add each element to the tracks array.\n\t// When it's loaded, report it.\n\t// If there is a network error, flag the track\n\tstemElements.map((stemElement) => {\n\t\tconst stem = makeStem(stemElement);\n\t\tconst url = stemElement.getAttribute('src').split('/');\n\t\tstem.fileName = url.slice(-1)[0];\n\t\tstems.push(stem);\n\n\t\tstem.audio.load();\n\n\t\tfunction canPlayThroughHandler() {\n\t\t\t// console.log(`${trackIndex} - ${stem.fileName} is ready`)\n\t\t\tstem.isReady = true;\n\t\t\tstem.audio.removeEventListener('canplaythrough', canPlayThroughHandler);\n\t\t\tcheckIfReady();\n\t\t}\n\n\t\tstem.audio.addEventListener('canplaythrough', canPlayThroughHandler);\n\n\t\tstem.audio.addEventListener('error', (e) => {\n\t\t\tif (e.target.error.code === 3 || e.target.error.code === 4) {\n\t\t\t\tconsole.warn(`${stem.fileName} could not be loaded`);\n\t\t\t\tstem.isReady = true;\n\t\t\t\ttrack.hasErrors = true;\n\t\t\t\tcheckIfReady();\n\t\t\t}\n\t\t});\n\t});\n\n\t// functions that we attach to the 'track' object are public &\n\t// usable from the outside.\n\t// Everything else is private.\n\n\n\tfunction playAllStems() {\n\t\tstems.map((stem, index) => {\n\t\t\tstem.unmute();\n\t\t\tpublisher.emit('stemPlayed', index);\n\t\t});\n\t}\n\n\n\tconst startSynced = () => new Promise((resolve, reject) => {\n\t\tstems.map(stem => stem.mute());\n\t\tfunction checkSync() {\n\t\t\tstems.map(stem => stem.play());\n\t\t\tconst minMax = stems.reduce((previous, current) => {\n\t\t\t\treturn {\n\t\t\t\t\tmin: Math.min(previous.min || current.audio.currentTime, current.audio.currentTime),\n\t\t\t\t\tmax: Math.max(previous.max || current.audio.currentTime, current.audio.currentTime),\n\t\t\t\t};\n\t\t\t}, { min: undefined, max: undefined });\n\t\t\tconst diff = minMax.max - minMax.min;\n\t\t\tif (minMax.max === 0) {\n\t\t\t\tconsole.log('Not ready.. trying again');\n\t\t\t\tsetTimeout(checkSync, 1000);\n\t\t\t} else if (diff < 0.05) {\n\t\t\t\tconsole.log(`starting with diff of ${diff}`);\n\t\t\t\tstems.map(stem => stem.stop());\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tplayAllStems();\n\t\t\t\t\tresolve();\n\t\t\t\t}, 250);\n\t\t\t} else {\n\t\t\t\tconsole.log(`diff: ${diff}  - trying again..`);\n\t\t\t\tstems.map(stem => stem.stop());\n\t\t\t\tsetTimeout(checkSync, 1000);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(checkSync, 1000);\n\t});\n\n\tfunction play() {\n\t\ttrack.active = true;\n\t\ttrack.element.classList.add('loading');\n\t\t// don't do anything if it's not ready. The user shouldn't be\n\t\t// able to play the track until it's ready anyway, though.\n\t\tif (!track.ready) return false;\n\t\t// const isSynced = startSynced();\n\t\tstartSynced().then(() => {\n\t\t\ttrack.element.classList.remove('loading');\n\t\t\ttrack.element.classList.add('playing');\n\t\t\tpublisher.emit('trackPlayed', trackIndex, stems.length);\n\t\t});\n\t\treturn true;\n\t}\n\n\tfunction stop() {\n\t\tstems.map(stem => stem.stop());\n\t\ttrack.active = false;\n\t\ttrack.element.classList.remove('playing');\n\t}\n\n\t/**\n\t * Bind event listeners & emitters\n\t */\n\n\ttrack.element.addEventListener('click', play);\n\n\tpublisher.subscribe('trackPlayed', (newIndex) => {\n\t\tif (newIndex === trackIndex) {\n\t\t\tif (!track.active) play();\n\t\t} else {\n\t\t\tstop();\n\t\t}\n\t});\n\n\tpublisher.subscribe('stemActivated', (stemIndex) => {\n\t\tif (track.active) stems[stemIndex].unmute();\n\t});\n\tpublisher.subscribe('stemDeactivated', (stemIndex) => {\n\t\tconsole.log(stemIndex, track.active);\n\t\tif (track.active) stems[stemIndex].mute();\n\t});\n\n\tpublisher.subscribe('allStemsActivated', playAllStems);\n\n\t/**\n\t * Debug logging\n\t */\n\n\tconst debugOutput = queryOne('#debug-output');\n\n\tpublisher.subscribe('trackPlayed', () => {\n\t\tdebugOutput.innerHTML = '';\n\t});\n\n\tfunction pad(input, padLength = 2, char = '0', direction = 'right') {\n\t\tlet string = input.toString();\n\t\tconst diff = padLength - input.length;\n\t\tfor (let i = 0; i < diff; i += 1) {\n\t\t\tif (direction === 'right') {\n\t\t\t\tstring += char;\n\t\t\t} else {\n\t\t\t\tstring = char + string;\n\t\t\t}\n\t\t}\n\t\treturn string;\n\t}\n\n\tfunction formatDecimal(input, lLength, rLength) {\n\t\tconst arr = input.toString().split('.');\n\t\tif (arr.length === 1) arr.push('0');\n\t\tconst whole = pad(arr[0], lLength, '0', 'left');\n\t\tconst dec = pad(arr[1], rLength, '0', 'right').substr(0, rLength);\n\t\treturn `${whole}.${dec}`;\n\t}\n\n\tsetInterval(() => {\n\t\tif (track.active) {\n\t\t\tconst debugString = ['*******'];\n\t\t\tlet min;\n\t\t\tlet max;\n\t\t\tstems.map((stem, index) => {\n\t\t\t\tif (stem.audio) {\n\t\t\t\t\tconst activated = (stem.active) ? 'activated' : 'deactivated';\n\t\t\t\t\tconst currentTime = Math.round(stem.audio.currentTime * 10000) / 10000;\n\t\t\t\t\tconst formattedTime = formatDecimal(currentTime, 3, 4);\n\n\t\t\t\t\tmin = (min) ? Math.min(min, currentTime) : currentTime;\n\t\t\t\t\tmax = (max) ? Math.max(max, currentTime) : currentTime;\n\t\t\t\t\tif (currentTime === 0) stem.audio.play();\n\t\t\t\t\tdebugString.push(`   stem ${index}: ${formattedTime} | ${stem.fileName} - ${activated} | ${stem.audio.buffered.end(0)} / ${stem.audio.duration}`);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst diff = formatDecimal(max - min, 1, 6);\n\t\t\tdebugString.push(`   max diff: ${diff}`);\n\t\t\tdebugOutput.innerHTML = debugString.join('<br>');\n\t\t}\n\t}, 100);\n\n\ttrack.stemsCount = stems.length;\n\treturn track;\n}\n\n\nexport default makeTrack;\n","\nclass PubSubEmitter {\n\tconstructor() {\n\t\t// create a new Map to hold all of the topics\n\t\tthis.listeners = new Map();\n\t}\n\n\tsubscribe(topic, callback) {\n\t\t// if the listener does not hae the topic yet, add it.\n\t\tif (!this.listeners.has(topic)) this.listeners.set(topic, []);\n\t\t// push the callback to the topic's array\n\t\tthis.listeners.get(topic).push(callback);\n\t}\n\n\tunsubscribe(topic, callback) {\n\t\tconst listeners = this.listeners.get(topic);\n\t\tlet index;\n\n\t\tif (listeners && listeners.length) {\n\t\t\t// find the index of the callback we're removing\n\t\t\tindex = listeners.reduce((i, listener, currentIndex) => {\n\t\t\t\t(typeof(listener) === 'function' && listener === callback) ?\n\t\t\t\t\ti = currentIndex :\n\t\t\t\t\ti;\n\t\t\t}, -1);\n\n\t\t\tif (index > -1) {\n\t\t\t\t// if we found a match, splice it out, and resupply the map with the spliced array\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t\tthis.listeners.set(topic, listeners);\n\t\t\t\treturn true; // return true if we removed something\n\t\t\t}\n\t\t}\n\t\treturn false; // return false if we didn't\n\t}\n\n\temit(topic, ...args) {\n\t\t// get the listeners subscribed to the topic\n\t\tconst listeners = this.listeners.get(topic);\n\n\t\tif (listeners && listeners.length) {\n\t\t\t// execute each callback with any supplied arguments\n\t\t\tlisteners.forEach((listener) => {\n\t\t\t\tlistener(...args);\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nconst publisher = new PubSubEmitter();\n\nexport default publisher;\n","// A small utility for getting DOM elements\nimport { query, queryOne } from '@artcommacode/q';\n\n// A component you can use to emit and subscribe to events.\n// Helpful to decouple UI stuff\nimport publisher from './components/publisher';\nimport makeTrack from './components/Track';\nimport makeButton from './components/Button';\n\n// first, just find the elements\nconst trackElements = query('.stem-track');\nconst everything = queryOne('.stem-buttons .play-all') || false;\nconst buttons = [];\nconst tracks = [];\n\nlet readyCount = 0;\n\nfunction readyHandler() {\n\treadyCount += 1;\n\tif (readyCount === tracks.length) {\n\t\tqueryOne('.stems-container').classList.add('ready');\n\t}\n}\n\n// add each composed track to an array\ntrackElements.map((track, index) => {\n\tconst newTrack = makeTrack(track, index, publisher, readyHandler);\n\ttracks.push(newTrack);\n});\n\nquery('.stem-buttons .stem-button').map((button, index) => {\n\tconst newButton = makeButton(button, index, publisher);\n\tbuttons.push(newButton);\n});\n\n/**\n * Event Listeners\n */\n\nif (everything) {\n\teverything.addEventListener('click', () => {\n\t\tpublisher.emit('allStemsActivated');\n\t});\n}\n\n// Use each track element as the source of a Stem object\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}