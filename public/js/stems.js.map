{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@artcommacode/q/index.js","src/js/components/Button.js","src/js/components/Stem.js","src/js/components/Track.js","src/js/components/publisher.js","src/js/stems.js"],"names":[],"mappings":"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","file":"stems.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar toArray = function toArray(list) {\n  return [].concat(_toConsumableArray(list));\n};\n\nvar first = function first(xs) {\n  return xs[0];\n};\n\nvar elemError = function elemError(e) {\n  throw new Error(\"\\\"\" + String(e) + \"\\\" does't exist in the document\");\n};\n\nvar getRoot = function getRoot(e) {\n  return !e ? document : document && document.body && document.body.contains(e) ? e : elemError(e);\n};\n\nvar query = exports.query = function query(q, e) {\n  var root = getRoot(e);\n  return root ? toArray(root.querySelectorAll(q)) : [];\n};\n\nvar queryOne = exports.queryOne = function queryOne(q, e) {\n  return first(query(q, e));\n};\n","\n/**\n * Receives a DOM element.\n * Returns an object with enable, activate, and deactivate methods\n * @param  {DOM element} element\n * @return {Shape}\n */\n\nfunction makeButton(el, buttonIndex, publisher) {\n\tconst button = {};\n\tbutton.element = el;\n\n\tbutton.enable = function enable() {\n\t\tbutton.enabled = true;\n\t\tbutton.element.classList.add('enabled');\n\t};\n\n\tbutton.disable = function disable() {\n\t\tbutton.enabled = false;\n\t\tbutton.element.classList.remove('enabled');\n\t};\n\n\tbutton.toggleEnabled = function toggleEnabled() {\n\t\tif (button.enabled) {\n\t\t\tbutton.disable();\n\t\t} else {\n\t\t\tbutton.enable();\n\t\t}\n\t};\n\n\tbutton.activate = function activate() {\n\t\tif (!button.enabled) button.enable();\n\t\tbutton.active = true;\n\t\tbutton.element.classList.add('active');\n\t};\n\n\tbutton.deactivate = function deactivate() {\n\t\tbutton.active = false;\n\t\tbutton.element.classList.remove('active');\n\t};\n\n\tbutton.toggleActive = function toggleActive(inputState) {\n\t\tbutton.active = inputState || !button.active;\n\t\tif (button.active === true) {\n\t\t\tbutton.activate();\n\t\t} else {\n\t\t\tbutton.deactivate();\n\t\t}\n\t};\n\n\t/**\n\t * EVENTS\n\t */\n\n\tpublisher.subscribe('enableButtons', (count) => {\n\t\tif (buttonIndex <= count - 1) {\n\t\t\tbutton.enable();\n\t\t\tbutton.activate();\n\t\t} else {\n\t\t\tbutton.disable();\n\t\t\tbutton.deactivate();\n\t\t}\n\t});\n\n\tbutton.element.addEventListener('click', () => {\n\t\tbutton.toggleActive();\n\t\tconst event = (button.active) ? 'stemActivated' : 'stemDeactivated';\n\t\tpublisher.emit(event, buttonIndex);\n\t});\n\t//\n\t// publisher.subscribe('allButtonsDisabled', button.disable);\n\t//\n\t// publisher.subscribe('trackPlayed', (trackIndex, stemCount) => {\n\t// \tif (buttonIndex <= stemCount - 1) {\n\t// \t\tbutton.enable();\n\t// \t\tbutton.activate();\n\t// \t} else {\n\t// \t\tbutton.disable();\n\t// \t\tbutton.deactivate();\n\t// \t}\n\t// })\n\t//\n\t// publisher.subscribe('stemPlayed', (activeIndex) => {\n\t// \tif (activeIndex === buttonIndex) button.activate();\n\t// });\n\n\treturn button;\n}\n\nexport default makeButton;\n","import { query, queryOne } from '@artcommacode/q';\n\n/**\n * Receives a DOM element with links to audio files to be played in tandem as stems.\n * Returns an object with play/pause/mute methods\n * @param  {DOM element} element\n * @return {Stem}\n */\nfunction makeStem(src) {\n\tconst stem = {};\n\tstem.audio = new Audio();\n\n\tstem.load = function loadStem(loadedCallback) {\n\t\tstem.fileName = src.replace(/\\/$/).split('/').pop();\n\t\tconst xhr = new XMLHttpRequest();\n\t\txhr.open('GET', encodeURI(src), true);\n\t\txhr.setRequestHeader('Content-Type', 'application/json');\n\t\txhr.responseType = 'blob';\n\t\txhr.onload = (e) => {\n\t\t\tconst blob = new Blob([xhr.response], { type: 'audio/mp3' });\n\t\t\tconst objectUrl = URL.createObjectURL(blob);\n\t\t\tstem.audio.src = objectUrl;\n\t\t\tstem.audio.onload = () => {\n\t\t\t\tURL.revokeObjectURL(objectUrl);\n\t\t\t};\n\t\t\tstem.ready = true;\n\t\t\tconst error = (e.target.status !== 200) ? `${e.target.status} ${e.target.statusText}` : false;\n\t\t\tloadedCallback(error);\n\t\t};\n\t\txhr.send();\n\t};\n\n\t// const stem = {};\n\t// stem.audio = element;\n\t// stem.active = false;\n\t// const url = stem.audio.getAttribute('src').split('/');\n\t// stem.fileName = url.slice(-1)[0];\n\n\tstem.play = function playStem() {\n\t\tconsole.log(`playing ${stem.fileName}`)\n\t\tif (stem.ready) {\n\t\t\tstem.unmute();\n\t\t\tstem.audio.play();\n\t\t}\n\t\tstem.active = true;\n\t\ttry {\n\t\t\tstem.audio.play();\n\t\t} catch (e) {\n\t\t\t// do nothing\n\t\t}\n\t};\n\n\tstem.reset = function resetStem() {\n\t\tstem.stop();\n\t\tstem.audio.volume = 1;\n\t}\n\n\tstem.stop = function stopStem() {\n\t\tstem.active = false;\n\t\tstem.audio.pause();\n\t\tstem.audio.currentTime = 0;\n\t};\n\n\tstem.unmute = function unmuteStem() {\n\t\tstem.active = true;\n\t\tstem.audio.volume = 1;\n\t};\n\n\tstem.mute = function muteStem() {\n\t\tstem.active = false;\n\t\tstem.audio.volume = 0;\n\t};\n\n\treturn stem;\n}\n\n\nexport default makeStem;\n","import { query, queryOne } from '@artcommacode/q';\nimport makeStem from './Stem';\n\n/**\n * Receives a DOM element with links to audio files to be played in tandem as stems.\n * Returns an object with play/pause/mute methods\n * @param  {DOM element} element\n * @return {Stem}\n */\nfunction makeTrack(el, trackIndex, publisher, readyCallback) {\n\tconst track = {};\n\ttrack.element = el;\n\tconst stemSources = JSON.parse(track.element.getAttribute('data-stems'));\n\n\tconst stems = [];\n\tlet loadedStems = 0;\n\n\t// add each element to the tracks array.\n\tstemSources.map((stemElement) => {\n\t\tconst stem = makeStem(stemElement);\n\t\tstems.push(stem);\n\t});\n\n\t/**\n\t * METHODS\n\t */\n\n\ttrack.play = function playTrack() {\n\t\ttrack.active = true;\n\t\tstems.map(stem => stem.play());\n\t\tpublisher.emit('enableButtons', stems.length);\n\t\ttrack.element.classList.add('playing');\n\t};\n\n\ttrack.stop = function stopTrack() {\n\t\ttrack.active = false;\n\t\tstems.map(stem => stem.reset());\n\t\tpublisher.emit('enableButtons', stems.length);\n\t\ttrack.element.classList.remove('playing');\n\t};\n\n\n\t/**\n\t * FUNCTIONS\n\t */\n\n\n\t/**\n\t * Track the number of loaded stems.\n\t * Set error status if necessary.\n\t */\n\tfunction stemLoadedHandler(err) {\n\t\tloadedStems += 1;\n\t\tif (err) {\n\t\t\ttrack.hasError = true;\n\t\t\ttrack.element.classList.add('has-errors');\n\t\t}\n\t\tif (loadedStems === stems.length) {\n\t\t\ttrack.isLoaded = true;\n\t\t\ttrack.element.classList.remove('loading');\n\t\t\ttrack.element.classList.add('loaded');\n\t\t}\n\t}\n\n\t/**\n\t * If the track hasn't loaded, load the stems. Otherwise, play.\n\t */\n\tfunction handleClick() {\n\t\tif (!track.isLoaded) {\n\t\t\ttrack.element.classList.add('loading');\n\t\t\tstems.map(stem => stem.load(stemLoadedHandler));\n\t\t} else {\n\t\t\tpublisher.emit('trackPlayed', trackIndex);\n\t\t\ttrack.play();\n\t\t}\n\t}\n\n\t/*\n   * EVENTS\n\t */\n\ttrack.element.addEventListener('click', handleClick);\n\n\tpublisher.subscribe('trackPlayed', (newIndex) => {\n\t\tif (newIndex !== trackIndex) {\n\t\t\ttrack.active = false;\n\t\t\ttrack.stop();\n\t\t}\n\t});\n\n\tpublisher.subscribe('stemActivated', (stemIndex) => {\n\t\tif (track.active) stems[stemIndex].unmute();\n\t});\n\n\tpublisher.subscribe('stemDeactivated', (stemIndex) => {\n\t\tif (track.active) stems[stemIndex].mute();\n\t});\n\n\tpublisher.subscribe('allStemsActivated', () => {\n\t\tif (track.active) {\n\t\t\tstems.map(stem => stem.play());\n\t\t\tpublisher.emit('enableButtons', stems.length);\n\t\t}\n\t})\n\n\t/**\n\t * Debug logging\n\t */\n\n\tconst debugOutput = queryOne('#debug-output');\n\n\tpublisher.subscribe('trackPlayed', () => {\n\t\tdebugOutput.innerHTML = '';\n\t});\n\n\tfunction pad(input, padLength = 2, char = '0', direction = 'right') {\n\t\tlet string = input.toString();\n\t\tconst diff = padLength - input.length;\n\t\tfor (let i = 0; i < diff; i += 1) {\n\t\t\tif (direction === 'right') {\n\t\t\t\tstring += char;\n\t\t\t} else {\n\t\t\t\tstring = char + string;\n\t\t\t}\n\t\t}\n\t\treturn string;\n\t}\n\n\tfunction formatDecimal(input, lLength, rLength) {\n\t\tconst arr = input.toString().split('.');\n\t\tif (arr.length === 1) arr.push('0');\n\t\tconst whole = pad(arr[0], lLength, '0', 'left');\n\t\tconst dec = pad(arr[1], rLength, '0', 'right').substr(0, rLength);\n\t\treturn `${whole}.${dec}`;\n\t}\n\n\tsetInterval(() => {\n\t\tif (track.active) {\n\t\t\tconst debugString = ['*******'];\n\t\t\tlet min;\n\t\t\tlet max;\n\t\t\tstems.map((stem, index) => {\n\t\t\t\tif (stem.audio) {\n\t\t\t\t\tconst activated = (stem.active) ? 'activated' : 'deactivated';\n\t\t\t\t\tconst currentTime = Math.round(stem.audio.currentTime * 10000) / 10000;\n\t\t\t\t\tconst formattedTime = formatDecimal(currentTime, 3, 4);\n\n\t\t\t\t\tmin = (min) ? Math.min(min, currentTime) : currentTime;\n\t\t\t\t\tmax = (max) ? Math.max(max, currentTime) : currentTime;\n\t\t\t\t\tif (currentTime === 0) stem.audio.play();\n\t\t\t\t\tdebugString.push(`   stem ${index}: ${formattedTime} | ${stem.fileName} - ${activated} | ${stem.audio.buffered.end(0)} / ${stem.audio.duration}`);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst diff = formatDecimal(max - min, 1, 6);\n\t\t\tdebugString.push(`   max diff: ${diff}`);\n\t\t\tdebugOutput.innerHTML = debugString.join('<br>');\n\t\t}\n\t}, 100);\n\n\ttrack.stemsCount = stems.length;\n\n\n\treturn track;\n}\n\n\nexport default makeTrack;\n","\nclass PubSubEmitter {\n\tconstructor() {\n\t\t// create a new Map to hold all of the topics\n\t\tthis.listeners = new Map();\n\t}\n\n\tsubscribe(topic, callback) {\n\t\t// if the listener does not hae the topic yet, add it.\n\t\tif (!this.listeners.has(topic)) this.listeners.set(topic, []);\n\t\t// push the callback to the topic's array\n\t\tthis.listeners.get(topic).push(callback);\n\t}\n\n\tunsubscribe(topic, callback) {\n\t\tconst listeners = this.listeners.get(topic);\n\t\tlet index;\n\n\t\tif (listeners && listeners.length) {\n\t\t\t// find the index of the callback we're removing\n\t\t\tindex = listeners.reduce((i, listener, currentIndex) => {\n\t\t\t\t(typeof(listener) === 'function' && listener === callback) ?\n\t\t\t\t\ti = currentIndex :\n\t\t\t\t\ti;\n\t\t\t}, -1);\n\n\t\t\tif (index > -1) {\n\t\t\t\t// if we found a match, splice it out, and resupply the map with the spliced array\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t\tthis.listeners.set(topic, listeners);\n\t\t\t\treturn true; // return true if we removed something\n\t\t\t}\n\t\t}\n\t\treturn false; // return false if we didn't\n\t}\n\n\temit(topic, ...args) {\n\t\t// get the listeners subscribed to the topic\n\t\tconst listeners = this.listeners.get(topic);\n\n\t\tif (listeners && listeners.length) {\n\t\t\t// execute each callback with any supplied arguments\n\t\t\tlisteners.forEach((listener) => {\n\t\t\t\tlistener(...args);\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nconst publisher = new PubSubEmitter();\n\nexport default publisher;\n","// A small utility for getting DOM elements\nimport { query, queryOne } from '@artcommacode/q';\n\n// A component you can use to emit and subscribe to events.\n// Helpful to decouple UI stuff\nimport publisher from './components/publisher';\nimport makeTrack from './components/Track';\nimport makeButton from './components/Button';\n\n// first, just find the elements\nconst trackElements = query('.stem-track');\nconst everything = queryOne('.stem-buttons .play-all') || false;\nconst buttons = [];\nconst tracks = [];\n\nlet readyCount = 0;\n\nfunction readyHandler() {\n\treadyCount += 1;\n\tif (readyCount === tracks.length) {\n\t\tqueryOne('.stems-container').classList.add('ready');\n\t}\n}\n\n// add each composed track to an array\ntrackElements.map((track, index) => {\n\tconst newTrack = makeTrack(track, index, publisher, readyHandler);\n\ttracks.push(newTrack);\n});\n\nquery('.stem-buttons .stem-button').map((button, index) => {\n\tconst newButton = makeButton(button, index, publisher);\n\tbuttons.push(newButton);\n});\n\n/**\n * Event Listeners\n */\n\nif (everything) {\n\teverything.addEventListener('click', () => {\n\t\tpublisher.emit('allStemsActivated');\n\t});\n}\n\n// Use each track element as the source of a Stem object\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}